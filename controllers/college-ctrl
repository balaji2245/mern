const College = require("../models/college-model");
const Student = require("../models/student-model");

createCollege = (req, res) => {
  const body = req.body;

  if (!body) {
    return res.status(400).json({
      success: false,
      error: "You must provide a college",
    });
  }

  const college = new College(body);

  if (!college) {
    return res.status(400).json({ success: false, error: err });
  }

  college
    .save()
    .then(() => {
      return res.status(201).json({
        success: true,
        id: college._id,
        message: "college created!",
      });
    })
    .catch((error) => {
      return res.status(400).json({
        error,
        message: "college not created!",
      });
    });
};

updateCollege = async (req, res) => {
  const body = req.body;

  if (!body) {
    return res.status(400).json({
      success: false,
      error: "You must provide a body to update",
    });
  }

  College.findOne({ _id: req.params.id }, (err, college) => {
    if (err) {
      return res.status(404).json({
        err,
        message: "College not found!",
      });
    }
    college.Name = body.Name;
    college.Year_founded = body.Year_founded;
    college.City = body.City;
    college.State = body.State;
    college.Country = body.Country;
    college.No_of_students = body.No_of_students;
    college.Courses = body.Courses;

    college
      .save()
      .then(() => {
        return res.status(200).json({
          success: true,
          id: college._id,
          message: "College updated!",
        });
      })
      .catch((error) => {
        return res.status(404).json({
          error,
          message: "College not updated!",
        });
      });
  });
};

deleteCollege = async (req, res) => {
  await College.findOneAndDelete({ _id: req.params.id }, (err, college) => {
    if (err) {
      return res.status(400).json({ success: false, error: err });
    }

    if (!college) {
      return res
        .status(404)
        .json({ success: false, error: `College not found` });
    }

    return res.status(200).json({ success: true, data: college });
  }).catch((err) => console.log(err));
};

getCollegeById = async (req, res) => {
  var data = {};

  try {
    let college = await College.findOne({ _id: req.params.id }).exec();
    data = college.toObject();

    let students = await Student.find({ college_id: data._id }).exec();
    data.students = students;

    // let college2 = await College.findOne({}).exec();
    // data2 = college2.toObject();
    // for (const item in data2) {

    let simColleges = await College.find({ State: data.State }).exec();
    data.simCollegesByState = simColleges;
    //   console.log(item);
    // }

    return res.status(200).json({ success: true, data: data });
  } catch (err) {
    console.log(err);
    return res.status(400).json({ err });
  }
};

// for (const item in items) {
//   console.log(item);
// }

// getCollegeById = async (req, res) => {
//   await College.findOne({ _id: req.params.id }, (err, college) => {
//     if (err) {
//       return res.status(400).json({ success: false, error: err });
//     }

//     if (!college) {
//       return res.status(404).json({ success: false, error: `College not found` });
//     }
//     return res.status(200).json({ success: true, data: college });
//   }).catch((err) => console.log(err));
// };

getColleges = async (req, res) => {
  await College.find({}, (err, colleges) => {
    if (err) {
      return res.status(400).json({ success: false, error: err });
    }
    if (!colleges.length) {
      return res
        .status(404)
        .json({ success: false, error: `College not found` });
    }
    return res.status(200).json({ success: true, data: colleges });
  }).catch((err) => console.log(err));
};

module.exports = {
  createCollege,
  updateCollege,
  deleteCollege,
  getColleges,
  getCollegeById,
};
